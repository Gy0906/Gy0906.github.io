<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据结构笔记</title>
    <url>/2023/02/08/2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="一-绪论"><a href="#一、绪论" class="headerlink" title="一、绪论"></a>一、绪论</h1><p>随着应用程序变得越来越复杂和数据越来越丰富，几百万、几十亿甚至几百亿的数据就会出现，而对这么大对数据进行搜索、插入或者排序等的操作就越来越慢，数据结构就是用来解决这些问题的。</p>
<span id="more"></span>

<h2 id="1-数据结构与算法的意义"><a href="#1、数据结构与算法的意义" class="headerlink" title="1、数据结构与算法的意义"></a>1、数据结构与算法的意义</h2><p><strong>数据结构是一门告诉你数据在计算机里如何组织的课程，而算法是一门告诉你数据在计算机里如何运算的课程</strong>，前者是结构学、后者是数学。程序设计就像盖房子，数据结构是砖、瓦，而算法则是设计图纸。 你若想盖房子首先必须要有原材料（数据结构），但这些原材料并不能自动地盖起你想要的房子，你必须按照设计图纸（算法）一砖一瓦地去砌，这样你才能拥有你想要的房子。</p>
<h2 id="2-数据结构的基本概念"><a href="#2、数据结构的基本概念" class="headerlink" title="2、数据结构的基本概念"></a>2、数据结构的基本概念</h2><h3 id="1数据结构的含义"><a href="#1-数据结构的含义" class="headerlink" title="(1)数据结构的含义"></a>(1)数据结构的含义</h3><p>首先数据结构中说的数据是指客观事物的符号表示。再计算机科学中，指的是所有能输入计算机中并被计算机程序处理的符号的总称。而数据的基本单位是数据元素(<em>Data Element</em>），一个事物的一组数据被称之为数据元素，可以是多项也可以是一项。而一个数据元素中的每一项元素都称为数据项，同时<strong>数据项也是数据元素中不可分割的最小标识单位</strong>。<br>数据结构是指互相之间存在着一种或多种的关系的数据元素的集合。记为<strong>Data_Structure&#x3D;(D,R)，其中，D是数据元素中的有限集；R是D上关系的有限集</strong>。</p>
<h3 id="2逻辑结构与存储结构"><a href="#2-逻辑结构与存储结构" class="headerlink" title="(2)逻辑结构与存储结构"></a>(2)逻辑结构与存储结构</h3><blockquote>
<p>数据结构可分为逻辑结构和存储结构。</p>
</blockquote>
<h4 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h4><p>数据的逻辑结构就是从一些具体问题中抽象出来的数学模型。</p>
<ul>
<li>集合结构</li>
<li>线性结构</li>
<li>树结构</li>
<li>图结构<br><img src="/../img/2-1.png" alt="avatar"></li>
</ul>
<h4 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h4><p>而数据的存储结构是指数据及其逻辑结构在计算机中的表示，也成为物理结构，是计算机看到的数据的内存分配情况。</p>
<ul>
<li>顺序存储结构</li>
<li>链式存储结构<br><img src="/../img/2-2.png" alt="avatar"></li>
</ul>
<h4 id="逻辑结构和村树结构间的关系"><a href="#逻辑结构和村树结构间的关系" class="headerlink" title="逻辑结构和村树结构间的关系"></a>逻辑结构和村树结构间的关系</h4><blockquote>
<p>数据的逻辑结构属于用户视图，是面向问题的，反映了数据内部的构成方式；<br>数据的存储结构属于具体实现的视图，是面向计算机的。<br><strong>一般算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的存储结构</strong>。一种数据的逻辑结构可以用多种存储结构来存储，而采用不同的存储结构，其数据处理的效率是不一样的。</p>
</blockquote>
<h3 id="3抽象数据类型"><a href="#3-抽象数据类型" class="headerlink" title="(3)抽象数据类型"></a>(3)抽象数据类型</h3><p>抽象数据类型(<em>Abstract Data Type, ADT</em>)是指一个数学模型以及定义在该模型上的一组操作。抽象数据类型的定义取决与他的一组逻辑特性，而与其在计算机内部如何表示和实现无关，即<strong>不论其内部结构如何改变，只要他的数学特性不变，都不影响其外部的使用</strong>。其可用三元组来表示：</p>
<blockquote>
<p>ADT&#x3D;(D,S,P)<br>其中<strong>D是数据对象；S是D上的关系集；P是D上的操作集</strong>。</p>
</blockquote>
<h2 id="3-算法的概念和性能分析"><a href="#3、算法的概念和性能分析" class="headerlink" title="3、算法的概念和性能分析"></a>3、算法的概念和性能分析</h2><h3 id="1算法的定义"><a href="#1-算法的定义" class="headerlink" title="(1)算法的定义"></a>(1)算法的定义</h3><p>算法(<em>Algorithm</em>)是对特定问题求解步骤的一种表述，是指令的有序序列。其中每一条指令表示一个或多个操作。<br>一个算法有以下特性： </p>
<ul>
<li>输入</li>
<li>输出</li>
<li>有穷性</li>
<li>确定性</li>
<li>可行性</li>
</ul>
<p>并且通常设计出好的算法去要考虑以下几点：</p>
<ul>
<li>正确</li>
<li>刻度</li>
<li>健壮</li>
<li>高效</li>
</ul>
<h3 id="2算法的性能分析"><a href="#2-算法的性能分析" class="headerlink" title="(2)算法的性能分析"></a>(2)算法的性能分析</h3><p>一个算法的好坏很大程度上取决于算法的效率，也就是算法索取要的计算机资源–时间和空间资源。</p>
<h4 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h4><p>时间复杂度就是通过定量的计算某算法的执行时间。一个语句实行所消耗的时间，是算法中所有语句执行时间之和，而每条语句的执行时间是该语句执行一次所使用的时间与该语句重复执行次数的乘积。一条语句重复执行次数称为该语句的频数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sum = <span class="number">0</span>;		<span class="comment">//语句频度：1</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;		<span class="comment">//语句频度：n+1</span></span><br><span class="line">	sum+=n;		<span class="comment">//语句频度：n</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如上述代码，计算器时间复杂度为：T(n)&#x3D;1+(n+1)+n&#x3D;2n+2<br>但是因为如此去算每一条语句非常麻烦，所以这时可以忽略掉依赖于机器的常量，然后关注运行时间的增长而不是实际的运行时间，这样就可以得到渐进时间复杂度。<br>所以在计算时间复杂度时，可以<strong>忽略所有低次幂和高次幂的系数</strong>，则上述语句时间复杂度为T(n)&#x3D;2n+2&#x3D;<em>O</em>(n)</p>
</blockquote>
<h4 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h4><p>算法的空间复杂度是指算法运行从开始到结束所需要的存储量。</p>
<h1 id="二-线性表"><a href="#二、线性表" class="headerlink" title="二、线性表"></a>二、线性表</h1><p>线性表中数据元素之间是线性关系，也就是一对一的关系，线性表嗯可以有顺序和链式两种存储结构，也成为顺序表和链表。</p>
<h2 id="1-线性表的基本概念"><a href="#1、线性表的基本概念" class="headerlink" title="1、线性表的基本概念"></a>1、线性表的基本概念</h2><blockquote>
<p>线性表(<em>Linear List</em>)是数据结构中最常用、最简单的结构。在线性表中，数据关系是一对一的关系，即他的数据元素是前后相连的；并且线性表中的数据元素的类型都相同<br>线性表是数据元素的有序集合，其基本特征如下：</p>
</blockquote>
<ul>
<li>必存在唯一的”第一元素”</li>
<li>比存在唯一的”最后元素”</li>
<li>除第一元素之外的元素均有唯一的”直接前驱”</li>
<li>除最后元素之外的元素均有唯一的”直接后继”</li>
</ul>
<h2 id="2-线性表的顺序存储结构及其实现"><a href="#2、线性表的顺序存储结构及其实现" class="headerlink" title="2、线性表的顺序存储结构及其实现"></a>2、线性表的顺序存储结构及其实现</h2><h3 id="1线性表的顺序存储结构"><a href="#1-线性表的顺序存储结构" class="headerlink" title="(1)线性表的顺序存储结构"></a>(1)线性表的顺序存储结构</h3><p>在计算机中存储线性表，一种最简单的方法就是顺序存储。这种方式的特点就是：<strong>线性表中所有元素所占用的存储空间是连续的</strong>，线性表中的元素依次存储在这个空间内，逻辑相邻的元素的存储位置也是相邻的</p>
<blockquote>
<p>所以第i个元素的位置可以<strong>通过<em>LOC(a_i)&#x3D;LOC(a_0)+i*L</em>来计算</strong>，其中<em>L</em>表示每个元素所占用的存储单元。<br>当顺序表中存储容量不够时，解决数据一处的方法就是申请一个更大容量的数组并进行数组元素的复制。</p>
</blockquote>
<h3 id="2顺序表类的设计与实现"><a href="#2-顺序表类的设计与实现" class="headerlink" title="(2)顺序表类的设计与实现"></a>(2)顺序表类的设计与实现</h3><h4 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h4><p>在顺序表中查找是否存在与待查元素相_同的_数据元素<br>现有线性表(23,75,41,38,54,62)，存储长度为7的一维数组空间中，现查找元素38。<br><img src="/../img/2-3.png" alt="avatar"></p>
<p>思路：将待查元素和春旭表中元素进行一一比较，如找到相同元素则返回该元素的位置，查找成功；如未找到相同的元素则返回-1，查找不成功。</p>
<p>实现代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">indexof</span><span class="params">(T key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="built_in">this</span>.len; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key.equals(<span class="built_in">this</span>.value[i])) &#123;</span><br><span class="line">            <span class="keyword">return</span> a-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h4>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客无法显示数学公式</title>
    <url>/2023/02/21/4-hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="问题"><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>写博客时会需要一些数学公式，也就是在markdown语言中用<code>&quot;$&quot;或&quot;$$&quot;</code>包住的公式块，但有时最终在博客中公式以源码的方式呈现，无法显示想打出的公式。</p>
<span id="more"></span>

<h3 id="解决方案"><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="1-检查博客中主题配置文件是否将mathjax的选项打开"><a href="#1、检查博客中主题配置文件是否将mathjax的选项打开" class="headerlink" title="1、检查博客中主题配置文件是否将mathjax的选项打开"></a>1、检查博客中主题配置文件是否将mathjax的选项打开</h4><p>1、<code>锁定位置&quot;Hexo\themes\next\_config.yml&quot;</code></p>
<p>进入配置文件后<code>Ctrl+F</code>然后搜索mathjax，将enable选项改为true。</p>
<p><img src="/../img/4-1.png"></p>
<p>2、然后在文章的<code>Front-matter</code>里打开<code>mathjax</code>。</p>
<p><img src="/../img/4-2.png"></p>
<h4 id="2-检查使用的markdown语言是否有错误"><a href="#2、检查使用的markdown语言是否有错误" class="headerlink" title="2、检查使用的markdown语言是否有错误"></a>2、检查使用的markdown语言是否有错误</h4><blockquote>
<p>因为使用hexo搭建的博客，虽然上传时使用的是markdown语言，但是通常是通过读取md文件，然后在转化为HTML页面，最终呈现在网页上。</p>
</blockquote>
<p>所以需要注意一下问题：</p>
<ul>
<li><p>一些md语言与HTML语言有冲突的地方就不能使用。还有一些md编辑器会有一些特殊的语法，或是插件中的语法，最终也会导致显示不出来公式，比如语义冲突的符号还包括<code>*, &#123;, &#125;, \\</code>等</p>
</li>
<li><p>尽量避免直接使用符号来写公式，比如<code>~&quot;下标&quot;~</code>、<code>^&quot;上标&quot;^</code>。</p>
</li>
<li><p>还有要注意公式块中不能出现任何错误，包括每个符号的字母和括号等等。</p>
</li>
<li><p>md语言中是可以和HTML标签通用的，但是公式块中不能任何标签。</p>
</li>
</ul>
<h4 id="3-更换hexo中的渲染引擎"><a href="#3、更换hexo中的渲染引擎" class="headerlink" title="3、更换hexo中的渲染引擎"></a>3、更换hexo中的渲染引擎</h4><blockquote>
<p>如果上述情况没有问题，可以更换一下渲染引擎，Hexo 默认使用 hexo-renderer-marked 引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签。</p>
</blockquote>
<p>1、更换 Hexo 的 markdown 渲染引擎，hexo-renderer-kramed 引擎是在默认的渲染引擎 hexo-renderer-marked 的基础上修改了一些 bug ，两者比较接近，也比较轻量级。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure>

<p>2、<code>锁定hexo\node_modules\kramed\lib\rules\inline.js</code></p>
<p>把第11行的 escape 变量的值做相应的修改，这一步是在原基础上取消了对,{,}的转义：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>

<p>第20行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure>

<p>3重新启动hexo（先clean再generate）。</p>
<h3 id="markdown常用公式符号"><a href="#markdown常用公式符号" class="headerlink" title="markdown常用公式符号"></a>markdown常用公式符号</h3><table>
<thead>
<tr>
<th>形式</th>
<th>实际效果</th>
<th>语法</th>
</tr>
</thead>
<tbody><tr>
<td>上标</td>
<td>$x^2$</td>
<td>x^2</td>
</tr>
<tr>
<td>下标</td>
<td>$H_2O$</td>
<td>H_2O</td>
</tr>
<tr>
<td>平均值</td>
<td>$\overline{a}$</td>
<td>\overline{a}</td>
</tr>
<tr>
<td>分式</td>
<td>$\frac{1}{2}$</td>
<td>\frac{1}{2}</td>
</tr>
<tr>
<td>根式</td>
<td>$\sqrt{2}$</td>
<td>\sqrt{2}</td>
</tr>
<tr>
<td>求和</td>
<td>$\stackrel{n}{\sum_{i&#x3D;1}}i&#x3D;\frac{1}{2}(n+1)$</td>
<td>\stackrel{n}{\sum_{i&#x3D;1}}i&#x3D;\frac{1}{2}(n+1)</td>
</tr>
<tr>
<td>无穷</td>
<td>$\infty$</td>
<td>\infty</td>
</tr>
<tr>
<td>箭头</td>
<td>$\to$</td>
<td>\to</td>
</tr>
<tr>
<td>极限</td>
<td>$\displaystyle \lim_{x \to \infty}{\frac{1}{x}}$</td>
<td>\displaystyle \lim_{x \to \infty}{\frac{1}{x}}</td>
</tr>
<tr>
<td>微积分</td>
<td>$\int^{\infty}_{0}{xdx}$</td>
<td>\int^{\infty}_{0}{xdx}</td>
</tr>
<tr>
<td>向上取整</td>
<td>$\lceil \frac{x}{2} \rceil$</td>
<td>\lceil \frac{x}{2} \rceil</td>
</tr>
<tr>
<td>向下取整</td>
<td>$\lfloor x \rfloor$</td>
<td>\lfloor x \rfloor</td>
</tr>
<tr>
<td>对数函数</td>
<td>$\log_2n$、$\ln e$、$\lg 10$</td>
<td>\log_2n、\ln e、\lg 10</td>
</tr>
<tr>
<td>大于等于</td>
<td>$\geq$</td>
<td>\geq</td>
</tr>
<tr>
<td>小于等于</td>
<td>$\leq$</td>
<td>\leq</td>
</tr>
<tr>
<td>不等于</td>
<td>$\neq$</td>
<td>\neq</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>经验总结</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法笔记</title>
    <url>/2023/02/18/3-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="排序的基本概念"><a href="#排序的基本概念" class="headerlink" title="排序的基本概念"></a>排序的基本概念</h2><p>排序时将一组数据元素(或记录)从任意序列排列成一个按关键字有序的序列。而排序的目的往往是为了更高效的的进行查找，查找有序的序列可以大幅度的提升计算机对数据处理的工作效率。</p>
<span id="more"></span>

<p>在众多排序方法中，要衡量一个排序方法的优劣，通常要考虑3个方面：</p>
<ul>
<li><strong>时间效率</strong>–排序速度，通常用时间复杂度来表示，时间复杂度由算法执行中元素比较次数和移动次数而定。</li>
<li><strong>空间效率</strong>–排序中占内存辅助空间的大小，通常用空间复杂度来表示。</li>
<li><strong>稳定性</strong>–排序是否能保持原来的一些顺序关系，即若两个记录A和B的关键字值相等，但排序后A、B的先后次序宝石不变，则称这种算法是稳定的。</li>
</ul>
<h2 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h2><h3 id="排序思路"><a href="#排序思路：" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>把第一个记录看成是已经排好序的有序序列，这时有序序列中只有一个记录。</li>
<li>从第二个记录起依次插入这个有序序列中，直到将第n个记录插入后整个序列变成有序序列。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-1.png"></p>
<h3 id="实现代码"><a href="#实现代码：" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">insertSort</span><span class="params">(<span class="type">int</span> [] arr)</span>&#123;</span><br><span class="line">    <span class="comment">//遍历所有的数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">//如果当前数字比前一个数字小</span></span><br><span class="line">        <span class="keyword">if</span>(arr[i]&lt;arr[i-<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="comment">//把当前遍历的数字存起来</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            <span class="type">int</span> j;</span><br><span class="line">            <span class="comment">//遍历当前数字去前面所有的数字</span></span><br><span class="line">            <span class="keyword">for</span>(j = i-<span class="number">1</span>; j&gt;=<span class="number">0</span> &amp;&amp; temp&lt;arr[j]; j--)&#123;</span><br><span class="line">                <span class="comment">//把前一个数字赋给后一个数字</span></span><br><span class="line">                arr[j+<span class="number">1</span>] = arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//把临时变量（外层for循环的当前元素）赋给不满足条件的后一个元素</span></span><br><span class="line">            arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><h3 id="排序思路"><a href="#排序思路：-1" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>按增量$d_1&#x3D;\frac{n}{2}$将原序列分成若干子序列，对每个序列进行直接插入序列</li>
<li>子序列排好序后将增量按照$d_{i+1}&#x3D;\frac{d_i}{2}$递减，对每个按此增量构造的子序列进行直接插入排序，直至增量$d_k&#x3D;1$，则整个序列排好序。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-1" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-2.png"></p>
<h3 id="实现代码"><a href="#实现代码：-1" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">shellSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">    <span class="comment">//遍历所有的步长</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> arr.length/<span class="number">2</span>; d&gt;<span class="number">0</span>; d/=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="comment">//遍历所有元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> d; i&lt;arr.length; i++)&#123;</span><br><span class="line">            <span class="comment">//遍历本组中的所有元素</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i-d; j&gt;=<span class="number">0</span>; j-=d)&#123;</span><br><span class="line">               <span class="comment">//如果当前元素大于加上步长后的那个元素</span></span><br><span class="line">               <span class="keyword">if</span>(arr[j]&gt;arr[j+d])&#123;</span><br><span class="line">                   <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                   arr[j] = arr[j+d];</span><br><span class="line">                   arr[j+d] = temp;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><h3 id="排序思路"><a href="#排序思路：-2" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>第一趟用第一个元素，依次开始按照要求和后一个元素进行比较，若是不符合则交换位置，若是符合则则记录与它比较的元素，直到第n个元素。</li>
<li>第二趟再用第一个元素按上述规则依次和后边元素进行比较，直到第n-1个元素。</li>
<li>以此类推，在比较n-1趟后结束排序。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-2" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-3.png"></p>
<h3 id="实现代码"><a href="#实现代码：-2" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">    <span class="comment">//控制共比较多少轮</span></span><br><span class="line">    <span class="comment">//轮数是[].length-1 最后一个不需要比较</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;arr.length-<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="comment">//控制每轮比较多少次</span></span><br><span class="line">        <span class="comment">//次数是[].length-1-i 前边比较完的不需要再比较</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j&lt;arr.length-<span class="number">1</span>-i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">//交换两个数据</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="快速排序"><a href="#快速排序：" class="headerlink" title="快速排序："></a>快速排序：</h2><h3 id="排序思路"><a href="#排序思路：-3" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>先将第一个设置为”基准值”，然后分别设置两个指针i和j指向序列起始位置关键字arr[low]和序列末尾位置关键字arr[high]。</li>
<li>从j指向的位置向前扫描，找到第一个关键字值小于基准值的记录放入i位置。</li>
<li>从i指向的位置向后扫描，找到第一个关键字值大于基准值的记录放入j位置。</li>
<li>重复步骤2、步骤3，直至i&#x3D;j，将基准值放到i(或j)位置，并返回该位置。</li>
<li>然后对基准数左右两部分分别重复以上操作。</li>
<li>当每一组元素个数都为1时，排序结束</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-3" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-4.png"></p>
<p><img src="/../img/3-5.png"></p>
<h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> start, <span class="type">int</span> end)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start&lt;end)&#123;</span><br><span class="line">        <span class="comment">//把数组中的第1个数字作为标准数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">standard</span> <span class="operator">=</span> arr[start];</span><br><span class="line">        <span class="comment">//记录需要排序的下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> start;</span><br><span class="line">        <span class="type">int</span> <span class="variable">high</span> <span class="operator">=</span> end;</span><br><span class="line">        <span class="comment">//循环找比标准数大的数和比标准数小的数</span></span><br><span class="line">        <span class="keyword">while</span>(low&lt;high)&#123;</span><br><span class="line">            <span class="comment">//右边的数字比标准数大</span></span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; arr[high]&gt;=standard)&#123;</span><br><span class="line">                high--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//使用右边的数字替换左边的数</span></span><br><span class="line">            arr[low] = arr[high];</span><br><span class="line">            <span class="comment">//如果左边的数字比标准数小</span></span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; arr[low]&lt;=standard)&#123;</span><br><span class="line">                low++;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[high] = arr[low];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把标准数赋给low或是high所在的位置</span></span><br><span class="line">        arr[low] = standard;</span><br><span class="line">        <span class="comment">//处理所有比标准数小的数字</span></span><br><span class="line">        quickSort(arr,start,low-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//处理所有比标准数大的数字</span></span><br><span class="line">        quickSort(arr,low+<span class="number">1</span>,end);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h2><h3 id="排序思路"><a href="#排序思路：-4" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>第一趟，从第一个元素开始依次向后扫描，并按排序要求记录最符合的元素。</li>
<li>并将最符合的元素与第一个元素交换位置。</li>
<li>以此类推，第i趟，扫描出最符合要求的元素，并且与第i个位置的元素交换位置。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-4" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-6.png"></p>
<h3 id="实现代码"><a href="#实现代码：-3" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">selectSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">    <span class="comment">//遍历所有的数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minIndex</span> <span class="operator">=</span> i;</span><br><span class="line">        <span class="comment">//把当前遍历的数和后面所有的的数依次进行比较，并记录下最小的下标</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">            <span class="comment">//如果后面比较的数比记录的最小的数小</span></span><br><span class="line">            <span class="keyword">if</span>(arr[minIndex]&gt;arr[j])&#123;</span><br><span class="line">                minIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果最小的数和当前遍历数的下标不一致，说明下标为minIndex的数比当前遍历的数更小</span></span><br><span class="line">        <span class="keyword">if</span>(i != minIndex)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[minIndex];</span><br><span class="line">            arr[minIndex] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><h3 id="排序思路"><a href="#排序思路：-5" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>第一趟，用最大的非叶子节点与其子节点进行比较，若不符合要求，则交换位置。</li>
<li>然后依次再把上一个非叶子节点按上述规则操作，若某一非叶子节点与其子节点交换位置后，，子节点仍然为非叶子节点，则继续比较。</li>
<li>重复步骤一和步骤二，直到完全二叉树变为最大堆或是最小堆。</li>
<li>取出根节点，并把最后一个叶子节点放到根节点的位置。</li>
<li>以此类推，直到所有节点均被取出，完成排序。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-5" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-7.png"></p>
<h3 id="实现代码"><a href="#实现代码：-4" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">heapSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="comment">//开始位置是最后一个非叶子节点，即最后一个节点的父节点</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> (arr.length-<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//调整为大顶堆</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">            maxHeap(arr, arr.length,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//先把数组中的第0个和堆中的最后一个数交换位置，再把前面的处理为大顶堆</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr.length-<span class="number">1</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">            arr[<span class="number">0</span>] = arr[i];</span><br><span class="line">            arr[i] = temp;</span><br><span class="line">            maxHeap(arr, i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">maxHeap</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> size, <span class="type">int</span> index)</span>&#123;</span><br><span class="line">        <span class="comment">//左子节点</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">leftNode</span> <span class="operator">=</span> <span class="number">2</span>*index + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//右子节点</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rightNode</span> <span class="operator">=</span> <span class="number">2</span>*index + <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> index;</span><br><span class="line">        <span class="comment">//和两个字节点分别比对，找出最大的节点</span></span><br><span class="line">        <span class="keyword">if</span>(leftNode&lt;size &amp;&amp; arr[leftNode]&gt;arr[max])&#123;</span><br><span class="line">            max = leftNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rightNode&lt;size &amp;&amp; arr[rightNode]&gt;arr[max])&#123;</span><br><span class="line">            max = rightNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//交换位置</span></span><br><span class="line">        <span class="keyword">if</span>(max != index)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[index];</span><br><span class="line">            arr[index] = arr[max];</span><br><span class="line">            arr[max] = temp;</span><br><span class="line">            <span class="comment">//交换位置后，可能会破坏之前拍好的对，所以之前排好的堆需要重新调整</span></span><br><span class="line">            maxHeap(arr, size, max);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><h3 id="排序思路"><a href="#排序思路：-6" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>简单的将原始序列划分为两个子序列。</li>
<li>分别对每个子序列归并排序。</li>
<li>最后将排好序的两个子序列合并为一个有序序列</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-6" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-8.png"></p>
<h3 id="实现代码"><a href="#实现代码：-5" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> low, <span class="type">int</span> middle, <span class="type">int</span> high)</span>&#123;</span><br><span class="line">    <span class="comment">//用于存储归并后的临时数组</span></span><br><span class="line">    <span class="type">int</span>[] temp = <span class="keyword">new</span> <span class="title class_">int</span>[high-low+<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//记录第一个数组中需要遍历的下标</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> low;</span><br><span class="line">    <span class="comment">//记录第二个数组中需要遍历的下标</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> middle+<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//用于记录在临时数组中存放的下标</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//遍历两个数组去除小的数字，放入临时数组中</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;=middle &amp;&amp; j&lt;=high)&#123;</span><br><span class="line">        <span class="comment">//第一个数组的数据更小</span></span><br><span class="line">        <span class="keyword">if</span>(arr[i] &lt;= arr[j])&#123;</span><br><span class="line">            <span class="comment">//把小的数据放入临时数组中</span></span><br><span class="line">            temp[index] = arr[i];</span><br><span class="line">            <span class="comment">//让下标向后移一位</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            temp[index] = arr[j];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//处理多余的数据</span></span><br><span class="line">    <span class="keyword">while</span>(j&lt;=high)&#123;</span><br><span class="line">        temp[index] = arr[j];</span><br><span class="line">        j++;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=middle)&#123;</span><br><span class="line">        temp[index] = arr[i];</span><br><span class="line">        i++;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//把临时数组中的数据重新存入原数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k&lt;temp.length; k++)&#123;</span><br><span class="line">        arr[k+low] = temp[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> low, <span class="type">int</span> high)</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> (high+low)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(low&lt;high) &#123;</span><br><span class="line">        mergeSort(arr, low, middle);</span><br><span class="line">        mergeSort(arr, middle + <span class="number">1</span>, high);</span><br><span class="line">        merge(arr, low, middle, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h3 id="排序思路"><a href="#排序思路：-7" class="headerlink" title="排序思路："></a>排序思路：</h3><ol>
<li>先按每个元素的的个位进行桶式排序，将序列分到若干子序列并放入各桶中。</li>
<li>将各个桶中的数据按照先进先出的规则收集到一起。</li>
<li>重复前两个步骤，直到进行最大数字的位数次，完成排序。</li>
</ol>
<h3 id="排序过程"><a href="#排序过程：-7" class="headerlink" title="排序过程："></a>排序过程：</h3><p><img src="/../img/3-9.png"></p>
<h3 id="实现代码"><a href="#实现代码：-6" class="headerlink" title="实现代码："></a>实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">radixSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">    <span class="comment">//存储数组中最大的数字</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> Integer.MIN_VALUE;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;max)&#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算最大数字是几位数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">maxlength</span> <span class="operator">=</span> (max +<span class="string">&quot;&quot;</span>).length();</span><br><span class="line">    <span class="comment">//用于临时存储数据的数组</span></span><br><span class="line">    <span class="type">int</span>[][] temp = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>][arr.length];</span><br><span class="line">    <span class="comment">//用于记录在temp中存放的数字的数量</span></span><br><span class="line">    <span class="type">int</span>[] count = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="comment">//根据最大长度的数决定比较的次数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, n = <span class="number">1</span>; i&lt;maxlength; i++, n*=<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="comment">//把每个数字分别计算余数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">            <span class="comment">//计算余数</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">ys</span> <span class="operator">=</span> arr[j]/n%<span class="number">10</span>;</span><br><span class="line">            <span class="comment">//把当前遍历的数据放入指定的数组中</span></span><br><span class="line">            temp[ys][count[ys]] = arr[j];</span><br><span class="line">            <span class="comment">//记录数量</span></span><br><span class="line">            count[ys]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//记录取的元素需要的位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//把数字取出来</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k&lt;count.length; k++)&#123;</span><br><span class="line">            <span class="comment">//记录数量的数组中当前余数记录的数量不为零</span></span><br><span class="line">            <span class="keyword">if</span>(count[k]!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//循环取出元素</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l&lt;count[k]; l++)&#123;</span><br><span class="line">                    <span class="comment">//取出元素</span></span><br><span class="line">                    arr[index] = temp[k][l];</span><br><span class="line">                    <span class="comment">//记录下一个位置</span></span><br><span class="line">                    index++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//把数量置零</span></span><br><span class="line">                count[k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML入门笔记</title>
    <url>/2022/12/31/1-HTML%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="一-html介绍"><a href="#一、HTML介绍：" class="headerlink" title="一、HTML介绍："></a>一、HTML介绍：</h1><p>Hyper Text Markup Language（超文本标记语言），他是属于一种网页的标准语言，但是不算是一种编程语言，而是一种Markup Language，即标记语言。它是属于前端开发的三大核心技术之一，另外两项是CSS和JavaScript。</p>
<span id="more"></span>
<p><font size="5">HTML、CSS、JavaScript三者有何区别？？</font></p>
<p>HTML用于构造网页的结构，例如：网页中的文字、表格、按钮、链接等等。而CSS用于修饰网页中的元素，就是把上述这些元素进行调整，例如：文字的大小，颜色，背景的样式等等。JavaScript用于实现网页的交互，比如在点击某个地方后页面会发生跳转，或是网页中需要用到的函数。</p>
<p>通俗的来说将，如果把写网页比作成盖房子，HTML相当于房子的地基，墙，屋顶，用于构造房子；CSS相当于装修你的房子，用作房子的修饰；JavaScript相当于屋内的各种家具，用于实现这个房子的功能。</p>
<p>HTML最初于1989年由CERN的Tim Berners-Lee发明。HTML基于更古老一些的语言SGML定义，并简化了其中的语言元素。</p>
<table>
<thead>
<tr>
<th align="left">版本号</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HTML1.0</td>
<td align="left">在1993年6月作为互联网工程工作小组(IETF)工作草案发布。</td>
</tr>
<tr>
<td align="left">HTML2.0</td>
<td align="left">1995年1 1月作为RFC 1866发布，于2000年6月发布之后被宣布已经过时。</td>
</tr>
<tr>
<td align="left">HTML3.2</td>
<td align="left">1997年1月14日，W3C推荐标准。</td>
</tr>
<tr>
<td align="left">HTML4.0</td>
<td align="left">1997年12月18日，W3C推荐标准。</td>
</tr>
<tr>
<td align="left">HTML4.01</td>
<td align="left">（微小改进）：1999年12月24日，W3C推荐标准。</td>
</tr>
<tr>
<td align="left">HTML5</td>
<td align="left">HTML5是公认的下一代Web语言，极大地提升了Web在富媒体、富内容和富应用等方面的能力，被喻为终将改变移动互联网的重要推手。Internet Explorer 8及以前的版本不支持。</td>
</tr>
</tbody></table>
<h1 id="二-html基本结构"><a href="#二、HTML基本结构：" class="headerlink" title="二、HTML基本结构："></a>二、HTML基本结构：</h1><p>首先是html文件的基本结构。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这就是html最核心的结构，不管什么样的网页都是由这几部分构成。这其中的&lt;&gt;叫做标签，或者叫做元素。</p>
<p><strong>一般情况下他们都是成对出现的</strong>，例如&lt;head&gt;表示head这部分的开始，而&lt;&#x2F;head&gt;表示结束，至于每个标签的含义，下面我们来学习。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<p>这是文档声明，这里表示一个html页面，至于含义，可以看作 DOC TYPE——document type，即文件类型。这是每一个网页必要的一部分，必须要写的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这表示页面的开始和结束，也就是要在这一对标签内书写你网页的所有内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一对标签表示网页的“头部”，像是添加一个页面标题、定时刷新或是加入外部文件，需要在这一对标签里书写，至于里面的详细内容后面会介绍到。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一对标签表示网页的“身体”，用于网页内容的编写，例如在网页中你所看到的文字，表格或是各种按钮，都是在这一对标签之中。</p>
<h1 id="三-html基本标签"><a href="#三、HTML基本标签：" class="headerlink" title="三、HTML基本标签："></a>三、HTML基本标签：</h1><h2 id="1-head标签"><a href="#1、head标签：" class="headerlink" title="1、head标签："></a>1、head标签：</h2><p>在这一对标签内的子标签都是比较特殊的，内容相对来说比较简单，也比较枯燥，知识点也比较少，所以放在了前面，至于这一块的内容，我们只需要了解这些子标签，以及他们的作用就好了。如果实在记不住也没有关系，忘记的时候再去查询就好了，这一块的知识本就不是一次性就都能记住的，反复的查看，记忆会更深，学的也会更扎实。</p>
<p>head标签有如下几个子标签：</p>
<ul>
<li>title标签</li>
<li>meta标签</li>
<li>link标签</li>
<li>style标签</li>
<li>script标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这对标签唯一的作用就是定义网页的标题。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span>      </span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-1.png" alt="avatar"></p>
<p>如上图所示，title标签所展示的标题是整个界面的标题，而&lt;body&gt;标签中&lt;p&gt; 标签中的内容时显示在页面上的。<br>这个&lt;p&gt;大家可能有些陌生，它表示的是一种文本，后续会讲到。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">属性名</span>=<span class="string">“名称”</span> <span class="attr">content</span>=<span class="string">”内容”</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个标签是用来定义网页的一些特殊信息，例如页面关键字、页面描述等。但是它并不能显示出来，这是给搜索引擎看的。</p>
<p>在这里小伙伴可能也注意到了，他不同与之前所讲述的标签，他没有用作标志结束的标签，事实上像上面这种有两个&lt;&gt;的标签，被叫作双标签，例如之前举的例子：&lt;head&gt;开始，而&lt;&#x2F;head&gt;表示结束，而这个叫做单标签，其中需要注意的是&gt;前面需要加上一个“&#x2F;”。</p>
<p>并且这里又引入了一个新的概念——属性。他是一对标签里的内容，通常为属性名&#x3D;“内容”，像是这里的content也可被叫做属性，用来表示内容。而meta标签前面的属性常用的有两种：</p>
<ul>
<li>name属性</li>
<li>http-equiv属性</li>
</ul>
<h3 id="1name属性"><a href="#（1）name属性：" class="headerlink" title="（1）name属性："></a>（1）name属性：</h3><table>
<thead>
<tr>
<th align="left">name属性值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">keywords</td>
<td align="left">网页中的关键字</td>
</tr>
<tr>
<td align="left">description</td>
<td align="left">网页的描述</td>
</tr>
<tr>
<td align="left">author</td>
<td align="left">作者</td>
</tr>
<tr>
<td align="left">copyright</td>
<td align="left">版权信息</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--关键字：可以有多个关键字--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span>  <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;前端开发,零基础入门&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--网页描述：对于网页内容的描述--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span>  <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML零基础入门一——基本标签&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--作者信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span>  <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;幼儿班的小白&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--版权声明--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span>  <span class="attr">name</span>=<span class="string">&quot;copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;原创不易，请勿转载&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2http-equiv属性"><a href="#（2）http-equiv属性：" class="headerlink" title="（2）http-equiv属性："></a>（2）http-equiv属性：</h3><table>
<thead>
<tr>
<th align="left">http-equiv属性取值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Content-Type</td>
<td align="left">定义网页</td>
</tr>
<tr>
<td align="left">refresh</td>
<td align="left">定时刷新界面并跳转</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--页面所使用的编码是utf-8--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这句代码也可以简写为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>在实际开发中，为了确保不出现乱码，我们必须要在每一个页面中加上。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span>  <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;6;url=http://www.baidu.com&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一行代码表述页面在6秒后跳转到百度界面，通常我们见到网页上的小广告，都是这个原理。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个标签用于CSS外部文件的引用，其中rel是“relative相对的”的缩写，它的取值是固定的，即stylesheet，表示引入的是一个样式表文件，href表示的是文件的路径。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>用来写CSS的内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scrip</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>用来写JavaScript的内容。</p>
<h2 id="2-body标签"><a href="#2、body标签：" class="headerlink" title="2、body标签："></a>2、body标签：</h2><p>body标签中有大量的子标签，为了方便记忆，所以就不再一一列举有哪些标签了，而是分成了六个部分进行展示。分别为：</p>
<ul>
<li>文本</li>
<li>图像</li>
<li>链接</li>
<li>列表</li>
<li>表格</li>
<li>表单</li>
</ul>
<h3 id="1文本"><a href="#（1）文本" class="headerlink" title="（1）文本"></a>（1）文本</h3><p>这个词汇大家一定不陌生，文本就是文字，但是在用HTML写网页是，并不是所有的文字都是一种格式，这里说的文本，实质网页中成段出现的文字，在这里为大家介绍两种格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在HTML中共有六种大小不同的格式分别为h1到h6，并且大小则h1到h6逐渐变小。这里的标题不同于head标签中的&lt;title&gt;标题，上面讲到过&lt;title&gt;标签指的是网页的标题，而这里的是指网页内容中的标题。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-2.png" alt="avatar"></p>
<p> 这里也可以明显的看到这几级标题大小有着明显的不同，在网页中按照他们的大小代表他们的重要性，通常一个网页中一级标题这能有一个，而后面的h2到h6可以有多个。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这一部分上面也接触到过，叫段落标签，比较常用。通常我们浏览网页中，那种大段的文字都是用的这个标签。在这里需要注意的是&lt;p&gt;标签中的内容是一个段落，在网页呈现的效果是可以自动换行的，因为每一个&lt;p&gt;标签就是一个段落，并且每个段落之间还会有一些空隙。</p>
<p>除此之外还有一些对文本进行处理的文本标签：</p>
<table>
<thead>
<tr>
<th align="left">文本标签</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">strong、b</td>
<td align="left">粗体</td>
</tr>
<tr>
<td align="left">em、cite、i</td>
<td align="left">斜体</td>
</tr>
<tr>
<td align="left">sup</td>
<td align="left">上标</td>
</tr>
<tr>
<td align="left">sub</td>
<td align="left">下标</td>
</tr>
<tr>
<td align="left">s</td>
<td align="left">中划线</td>
</tr>
<tr>
<td align="left">u</td>
<td align="left">下划线</td>
</tr>
<tr>
<td align="left">big</td>
<td align="left">大字</td>
</tr>
<tr>
<td align="left">small</td>
<td align="left">小字</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">big</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">big</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">small</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">u</span>&gt;</span>好好学习，天天向上。<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">s</span>&gt;</span>原价10.00<span class="tag">&lt;/<span class="name">s</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>(a+b)<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>=a<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>+b<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>+2ab<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>H<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>SO<span class="tag">&lt;<span class="name">sub</span>&gt;</span>4<span class="tag">&lt;/<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-3.png" alt="avatar"></p>
<p>效果如上图所示，通常比较常用的也就是加粗和倾斜；中划线通常用于价格降价宣传；至于大字号、小字号和下划线可以利用CSS来调整；而上标和下标通常用于公式，比如幂，角标，或是化学式等等。</p>
<p>除此之外需要注意的是除了&lt;p&gt;标签，其他的不会自己换行，需要加上换行标签&lt;br&#x2F;&gt;，后面会讲到。这是因为&lt;p&gt;标签属于块元素，块元素的意思是在浏览器显示状态下将占据整一行，并且排斥其他元素与其位于同一行，但是块元素的内部允许放其他的块元素或是行内元素，比如之前讲到的h1-h6就属于块元素；至于行内元素与块元素正好相反，行内元素可以与其他行内元素位于同一行的。此外，行内元素内部只可以容纳其他行内元素，不可以容纳块元素，比如这里讲的文本标签都是属于行内元素。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>有些时候需要我们手动去换行，比如使用那些行内元素的时候，就要用到换行标签&lt;br&#x2F;&gt;，它是“break”的缩写，这也是一个单标签，可以直接写到&lt;p&gt;标签中。需要注意的是这里的斜杠“&#x2F;”是写在后面的。</p>
<p>而&lt;hr&#x2F;&gt;标签的作用是添加一条水平线，他是水平线“horizon的缩写”。</p>
<p>&lt;br&#x2F;&gt;属于行内元素，&lt;hr&#x2F;&gt;属于块元素。后面在遇到这种易混淆的的概念，会在为大家解释。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>关雎<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>关关雎鸠，在河之洲。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>窈窕淑女，君子好逑。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>参差荇菜，左右流之。<span class="tag">&lt;<span class="name">br</span>/&gt;</span>窈窕淑女，寤寐求之。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-4.png" alt="avatar"></p>
<p>由上图可以看出如果在&lt;p&gt;标签中的文本进行换行，那么会换行但是中间不会有空隙。所以在写网页时可以按照我们的需求，对排版进行调整。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一标签对于现在来说并没用什么用处，不会使页面有什么变化，顶多可以把代码划分出区域，使其结构更加的清晰，但是它可以配合CSS去修饰某一块的样式。也是十分重要的一个知识点。</p>
<h3 id="2图像"><a href="#（2）图像" class="headerlink" title="（2）图像"></a>（2）图像</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;提示信息&quot;</span> <span class="attr">title</span>=<span class="string">&quot;提示文字&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这是图像标签，用于引入一个图片，在这个标签有三个属性：</p>
<ul>
<li>src属性</li>
<li>alt属性</li>
<li>title属性</li>
</ul>
<h4 id="1src属性"><a href="#（1）src属性" class="headerlink" title="（1）src属性"></a>（1）src属性</h4><p>这个属性与上面的&lt;link&gt;标签的href属性类似，那个为文件路径，这个是图片路径，但是上面没有详细解释过，类似与这种路径的写法有两种，一种是相对路径，一种是绝对路径。<br>相对路径不太好理解，就是需要你要插入的图片和html文件位于同一个目录下，如下图所示：</p>
<p><img src="/../img/1-5.png" alt="avatar"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/yasuo.jpg&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-6.png" alt="avatar"></p>
<p> 比如说我在html–练习这个文件夹里面创建了个test.html文件，同时这个文件夹里还有一个img文件夹，像引入这个img文件夹里的图片，因为他们处于同一级目录内，所以就可以按照上面所示引入这张照片，也可以是引入同样在html–练习文件夹里的图片，这样的话就不用写前面的img文件夹了。两者的效果是一样的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;yasuo.jpg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>至于绝对路径就比较好理解了，相信小伙伴们平时也注意到，在我们安装什么软件时，会有一个安装路径，就是这个文件在你电脑上的位置：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;D:/HBuilderX/project/html--练习/img/yasuo.jpg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2alt属性"><a href="#（2）alt属性" class="headerlink" title="（2）alt属性"></a>（2）alt属性</h4><p>这个属性里面是输入提示信息的，所谓的提示信息指的是，当网页按照前面的路径找不到你存放的照片时，所显示的文字。比如加上alt属性，然后把路径删掉：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;yasuo&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-7.png" alt="avatar"></p>
<p>如上图，就会显示你输入的提示信息。</p>
<h4 id="3title属性"><a href="#（3）title属性" class="headerlink" title="（3）title属性"></a>（3）title属性</h4><p>他和前面一项的提示信息容易混淆，这个提示文字说的是，当你的鼠标放到图片上时，所显现出来的文字：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/yasuo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;yasuo&quot;</span> <span class="attr">title</span>=<span class="string">&quot;灵魂莲华 亚索&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-8.png" alt="avatar"></p>
<p> 事实上是有鼠标的，但因为我这个截图工具的原因，没显示出来，大家理解了就好。</p>
<p>一般情况下，前两个属性是必须写的，而最后这个title属性可写可不写。</p>
<h3 id="3链接"><a href="#（3）链接" class="headerlink" title="（3）链接"></a>（3）链接</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;打开方式&quot;</span>&gt;</span> 文本或图片 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>链接标签是一个双标签，同时还是一个行内元素，忘记可以翻看上面。至于它的属性一共有两个：</p>
<ul>
<li>href属性</li>
<li>target属性</li>
</ul>
<h4 id="1href属性"><a href="#（1）href属性" class="headerlink" title="（1）href属性"></a>（1）href属性</h4><p>link标签里面提到过，当时他的意义时你CSS外部文件的地址，而在这里指的是链接的地址，它可以是网址：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.csdn.net/weixin_65054907?spm=1000.2115.3001.5343&quot;</span>&gt;</span>幼儿班的小白<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/../img/1-9.png" alt="avatar"></p>
<p> 如上图所示当点击这串文字后就会跳转到我CSDN的主页。当然这串文字也替换为图片，格式就和上面提到的图片格式一样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.csdn.net/weixin_65054907?spm=1000.2115.3001.5343&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/yasuo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;我的主页&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>样式和上面引入图片后一样，不同的是点击图片会进行页面的跳转。</p>
<p>同时这个属性的内容也可以是你自己写的html文件或者是当前html文件的某一部分，跳转到另一个html文件也比较好理解，只需要把这个链接地址改为你要跳转那个文件的路径，填写路径的方式和图片的一样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转文件.html&quot;</span>&gt;</span>跳转到另一个文件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>或者是可以跳转到当前文件的某一部分，这样说可能会有些陌生，当时大家回忆一下，有些网页会有目录，当你点击目录的时候，网页会直接跳转到那一部分，比如某度百科，那个原理是一样的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#technology&quot;</span>&gt;</span>前端开发核心技术<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tool&quot;</span>&gt;</span>前端开发工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#frame&quot;</span>&gt;</span>前端开发框架<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;technology&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>前端开发核心技术<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tool&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>前端开发工具<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>HBuilder<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>Sublime text<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>WebStorm<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		……<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;frame&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>前端开发框架<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>Angular<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>React<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-10.png" alt="avatar"></p>
<p>每当点击上面的目录时，页面就会自动跳转到你所电机的内容部分，当然这个目录也可以是多级的，跳转到某一小部分也是可以的。至于这串代码里面用了一些列表的知识，马上会讲到，先去理解这个链接。</p>
<p>对于href里的内容，用到的时之前讲过的div标签，将我的代码分成了几个部分，并且给每个部分都起了名字，也就是那个id属性，这算是一个通用属性，大部分标签都有，剩余小部分使用的是name属性。而在选取id时使用是“#id名”的方式，后续的CSS也会讲到，因为在CSS里这是一个最常用的方式。</p>
<h4 id="2target-属性"><a href="#（2）target-属性" class="headerlink" title="（2）target 属性"></a>（2）target 属性</h4><p>这个属性里填写的是链接的打开方式，在基础阶段，就认识两个就可以了：</p>
<table>
<thead>
<tr>
<th align="left">target属性值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">_self</td>
<td align="left">在当前网页打开</td>
</tr>
<tr>
<td align="left">_blank</td>
<td align="left">在新窗口打开</td>
</tr>
</tbody></table>
<p>这个两个，相信对于经常网上冲浪的小伙伴们来说并不难理解，一个是在点击链接后直接在当前页面进行跳转，另一个是保持原来的页面不变，在新建一个页面并打开点击的链接。需要注意的是这两个属性值前面需要加下划线“_”，别和其他符号弄混。</p>
<h3 id="4列表"><a href="#（4）列表" class="headerlink" title="（4）列表"></a>（4）列表</h3><p>列表也是网页中一种比较常用的排列格式，共分为两种：</p>
<ul>
<li>有序列表</li>
<li>无序列表</li>
</ul>
<h4 id="1有序列表"><a href="#（1）有序列表" class="headerlink" title="（1）有序列表"></a>（1）有序列表</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表内容<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>&lt;ol&gt;标签为有序列表，是ordered list的简称。而他里边的&lt;li&gt;标签是列表的内容，可以有根据你的需求有很多项。</p>
<p>而他的type属性值是用来描述有序列表前边序号的。共有5种：</p>
<table>
<thead>
<tr>
<th align="left">有序列表type属性值</th>
<th align="left">列表项符号</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">阿拉伯数字：1、2、3……（默认值）</td>
</tr>
<tr>
<td align="left">a</td>
<td align="left">小写英文字母：a、b、c……</td>
</tr>
<tr>
<td align="left">A</td>
<td align="left">大写英文字母：A、B、C……</td>
</tr>
<tr>
<td align="left">i</td>
<td align="left">小写罗马数字：i、ii、iii……</td>
</tr>
<tr>
<td align="left">I</td>
<td align="left">大写罗马数字：I、II、III……</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">h2</span>&gt;</span>前端开发核心技术<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;I&quot;</span>&gt;</span></span><br><span class="line">	    	<span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	    	<span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-11.png" alt="avatar"></p>
<h4 id="2无序列表"><a href="#（2）无序列表" class="headerlink" title="（2）无序列表"></a>（2）无序列表</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表内容<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p> 这个列表和有序列表大同小异唯一不同的是属性值有一定的变化：</p>
<table>
<thead>
<tr>
<th align="left">无序列表type属性值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">disc</td>
<td align="left">实心圆●（默认值）</td>
</tr>
<tr>
<td align="left">circle</td>
<td align="left">空心圆○</td>
</tr>
<tr>
<td align="left">square</td>
<td align="left">正方形■</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>前端开发核心技术<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;disc&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-12.png" alt="avatar"></p>
<p> 这一部分比较简单，内容也比较少。需要注意的是，首先这两种列表都是属于块元素，也就是需要自己占一行的；同时这两种列表的type属性可以不写，这样的话就会自动使用默认值；还有&amp;ly;ul&gt;无序列表里的子元素只能是&amp;ly;li&gt;，不能是其他标签。</p>
<h3 id="5表格"><a href="#（5）表格" class="headerlink" title="（5）表格"></a>（5）表格</h3><p>这个表格可能看上去比较复杂，其实和列表有些一些异曲同工之妙。我们可以把表格看作是很多个列表堆叠在一起，把几个列表合成一个，然后加入了一些新的结构。所以这一部分也很简答，只需要记住一个基本结构，和两个基本属性就好了。</p>
<p>基本结构：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">caption</span>&gt;</span>成绩单<span class="tag">&lt;/<span class="name">caption</span>&gt;</span>		<span class="comment">&lt;!--表格标题--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">thead</span>&gt;</span>		<span class="comment">&lt;!--表头--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span>&gt;</span>	<span class="comment">&lt;!--行--&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">th</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">th</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">th</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span>		<span class="comment">&lt;!--表身--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>59<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>60<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span>	</span><br><span class="line">			<span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>		<span class="comment">&lt;!--表脚--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>等级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-13.png" alt="avatar"></p>
<p> 虽然这个结构看上去会有些复杂，但是如果拆开来看就不会了，首先表格需要在&lt;body&gt;标签里建立一个&lt;table&gt;标签来声明一个表格，与之前列表的ol标签是一样。接着是一个表格的标题，用的是&lt;caption&gt;标签，它会显示在表格最上方的居中位置。然后&lt;tr&gt;标签代表的是行，你的表格最最多需要几行，就会有几个&lt;tr&gt;标签。&lt;tr&gt;标签的里面是&amp;ly;td&gt;标签代表的是单元格，也就是表格的内容或者可以理解为列，其中有一个特殊针对表头的表达方式是&lt;th&gt;标签，他和&lt;td&gt;标签的意思是一样的，只是会自动地加粗文字。最后是&lt;thead&gt;、&lt;tbody&gt;、&lt;tfoot&gt;这三个标签，他们并没有什么实际的作用，但是同&lt;div&gt;标签一样，起个让结构更清晰的作用，同时方便CSS的选取。</p>
<p>上面就是一个表格的完整结构，下面来说说单元格的两个重要属性：</p>
<ul>
<li>rowspan属性</li>
<li>colspan属性</li>
</ul>
<h4 id="1colspan-属性"><a href="#（1）colspan-属性" class="headerlink" title="（1）colspan 属性"></a>（1）colspan 属性</h4><p>这个属性的意义是合并列，用于将表格的几列表格合并在一起，写在&lt;td&gt;单元格标签里，属性值说的是合并的数量：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">		    <span class="selector-tag">table</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">td</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid black;&#125;</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>高等数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学物理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学体育<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-14.png" alt="avatar"></p>
<p>因为默认情况下，表格是没有边框的。在这个例子中，我们使用了CSS加入边框，这样会让表格有一个更清晰表格结构，现在就只需要了解就好，这些都属CSS的范畴。这里可以看出学科这个单元格占了两列的位置，如果要是没有用这个属性：</p>
<p><img src="/../img/1-15.png" alt="avatar"></p>
<p> 可以清晰地看出多了一条线，所以需要根据自己的需要，对表格进行调整。</p>
<h4 id="2rowspan属性"><a href="#（2）rowspan属性" class="headerlink" title="（2）rowspan属性"></a>（2）rowspan属性</h4><p>如果弄明白上面的那个属性，那么这个也就好理解了，这个属性是意义是合并行，也就是把几行合并在一起：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">		    <span class="selector-tag">table</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">td</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid black;&#125;</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>高等数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学物理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学体育<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-16.png" alt="avatar"></p>
<p>这个也比较好理解，rowspan&#x3D;”2”指的是合并行，然后后面继续写第一行的东西，而第二行的时候</p>
<p>因为第一列已经一个占了两行的学科，所以就直接写后面两列就好了。那如果合并行在不在第一列应该怎么写：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">		    <span class="selector-tag">table</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">td</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid black;&#125;</span></span><br><span class="line"><span class="language-css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>高等数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学物理<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>大学体育<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="/../img/1-17.png" alt="avatar"></p>
<p> 如上方所示，就直接每一行的第一个单元格直接加就可以。只要在写表格时候，清楚我们每一个单元格的位置，如果有合并多行或是多列的情况就只跳过就好了。</p>
<h3 id="6表单"><a href="#（6）表单" class="headerlink" title="（6）表单"></a>（6）表单</h3><p>表单的结构与表格有些类似，首先在写表格之前，需要先用&lt;table&gt;标签先声明一个表格，然后再在这个&lt;table&gt;标签里面写，而表单则是需要一个&lt;from&gt;标签来声明。但是两者还是有本质上的区别，表格很好理解，就是表格，而表单指的是文本框、按钮、单选框、复选框、下拉列表等的统称。之所以把他放在最后，是因为是这几项功能里边最复杂最重要的一项。或不多说，进入正题！</p>
<p>在&lt;from&gt;标签中共有这3种子标签：</p>
<ul>
<li>&lt;input&gt;标签</li>
<li>&lt;textarea&gt;标签</li>
<li>&lt;select&gt;标签</li>
</ul>
<h4 id="1form标签"><a href="#1-form标签" class="headerlink" title="(1)form标签"></a>(1)form标签</h4><p>首先是form标签内部中可能用到的一些属性</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">action</span>=<span class="string">&quot;提交地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;打开方式&quot;</span> <span class="attr">enctpy</span>=<span class="string">&quot;编码方式&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="1-name属性"><a href="#1、name属性" class="headerlink" title="1、name属性"></a>1、name属性</h5><p>用来区分各个表单，就是给你得每个表单去一个名字。和前边的id属性有点类似，只不过不一样的是：首先id的值是不能一样的，每个标签都是一个独一无二的名字，而name属性的值是可以一样的。</p>
<h5 id="2-method属性"><a href="#2、method属性" class="headerlink" title="2、method属性"></a>2、method属性</h5><p>用来写提交的方式，属性值有两个，一个是”post”，另一个是”get”，但是一般使用的是”post”，因为安全性比较高</p>
<h5 id="3-action属性"><a href="#3、action属性" class="headerlink" title="3、action属性"></a>3、action属性</h5><p>用于填写表单中数据提交的地址或是，一般情况下，这三个属性是配合着使用的。</p>
<h5 id="4-target属性"><a href="#4、target属性" class="headerlink" title="4、target属性"></a>4、target属性</h5><p>用于写提交的方式在前边的a标签中提到过，和前边的用法完全一样，主要有”_self”和”_blank”两个属性值，再打开一个新的页面时，控制当前页面是否在当前页面打开</p>
<h5 id="5-enctpy属性"><a href="#5、enctpy属性" class="headerlink" title="5、enctpy属性"></a>5、enctpy属性</h5><p>一般情况下不会用到，他是用来控制提交表单时的编码方式。</p>
<h4 id="2input标签"><a href="#2-input标签" class="headerlink" title="(2)input标签"></a>(2)input标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input type=&quot;类型&quot;/&gt;</span><br></pre></td></tr></table></figure>
<p>需要注意的是input标签都是单标签，即自闭和标签。</p>
<p>input标签顾名思义，是用来输入信息的。标签中最重要的就是type属性，用来控制表单的类型。共有下面几种类型：</p>
<table>
<thead>
<tr>
<th align="left">type属性值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">text</td>
<td align="left">单行文本框</td>
</tr>
<tr>
<td align="left">password</td>
<td align="left">密码文本框</td>
</tr>
<tr>
<td align="left">radio</td>
<td align="left">单选框</td>
</tr>
<tr>
<td align="left">checkbox</td>
<td align="left">多选框</td>
</tr>
<tr>
<td align="left">button</td>
<td align="left">普通按钮</td>
</tr>
<tr>
<td align="left">submit</td>
<td align="left">提交按钮</td>
</tr>
<tr>
<td align="left">reset</td>
<td align="left">重置按钮</td>
</tr>
<tr>
<td align="left">file</td>
<td align="left">上传文件</td>
</tr>
</tbody></table>
<h5 id="1-单行文本框"><a href="#1、单行文本框" class="headerlink" title="1、单行文本框"></a>1、单行文本框</h5><p>单行文本框type属性取值为”text”时，呈现出的是单行文本框，通常用于网页中填写用户名或是注册信息等等输入信息的文本框。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-18.png" alt="avatar"></p>
<p>当type取”text”值的时候有几个常用的属性：</p>
<ul>
<li>size属性</li>
<li>maxlength属性</li>
<li>placeholder属性</li>
<li>value属性</li>
</ul>
<h6 id="size属性"><a href="#size属性" class="headerlink" title="size属性"></a>size属性</h6><p>控制文本框的长度，但是一般情况下都是后面再用css调整，而不是在input标签里直接写入。</p>
<p>效果如下：</p>
<p><img src="/../img/1-19.png" alt="avatar"></p>
<h6 id="maxlength属性"><a href="#maxlength属性" class="headerlink" title="maxlength属性"></a>maxlength属性</h6><p>控制文本框中可输入的文字的最大长度，比如日常见到的输入电话，身份证号等。</p>
<p>效果如下：</p>
<p><img src="/../img/1-20.png" alt="avatar"></p>
<h6 id="placeholder属性"><a href="#placeholder属性" class="headerlink" title="placeholder属性"></a>placeholder属性</h6><p>这个属性的取值将会显示在文本框中，但是当点击文本框输入信息时，提示文字就会消失。</p>
<p>效果如下：</p>
<p><img src="/../img/1-21.png" alt="avatar"></p>
<h6 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a>value属性</h6><p>给文本框加一个默认的值，与前边一个不同的时，这个value属性里边的值会直接输入在文本框里，而placeholder属性的值再输入值的时候会直接消失。</p>
<p>效果如下：</p>
<p><img src="/../img/1-22.png" alt="avatar"></p>
<h5 id="2-密码文本框"><a href="#2、密码文本框" class="headerlink" title="2、密码文本框"></a>2、密码文本框</h5><p>密码文本框的tpye属性取值为”password”，与普通的文本框基本一样，唯一一点不同的是，当你在密码文本框输入信息时，不会显示你所输入的信息。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-23.png" alt="avatar"></p>
<p>至于其他的属性，与单行文本框完全通用，可以参考上面。</p>
<h5 id="3-单选框"><a href="#3、单选框" class="headerlink" title="3、单选框"></a>3、单选框</h5><p>单选框的type属性取值为”radio”，单选框通常在调查问卷或是注册时会见到，比较常用。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			最喜欢的水果：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;西瓜&quot;</span>&gt;</span>西瓜</span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草莓&quot;</span>&gt;</span>草莓</span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;苹果&quot;</span>&gt;</span>苹果</span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-24.png" alt="avatar"></p>
<p>当type属性取值为”radio”时，效果为单选框，其中会用到一下属性：</p>
<ul>
<li>name属性</li>
<li>value属性</li>
<li>checked属性</li>
</ul>
<h6 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h6><p>这里的name属性和之前form标签中的不太一样，前边的name属性只是用来命名，后期可以通过JavaScript或是其他方式使用数据。而这里name属性主要是为了将单选的内容进行分组，什么意思呢，因为是单选框每一组选项只能选择一个选项，所以需要name属性对其进行分组，使得在name相同的一组中选择一个选项。如果name属性不同或是根本没有写name属性，则会出现可以同时选择多个选项的情况，所以这个属性是必须写的。</p>
<h6 id="value属性"><a href="#value属性-1" class="headerlink" title="value属性"></a>value属性</h6><p>在这里value属性不同文本框中的value属性，因为是单选框所以，不会有默认的输入答案，但它也是单选框必须写的一个元素。从上面的示例可以看出每一个选项后边的文字并不是value属性里边的，而是”&gt;”后边的文字，所以说在表单中你的选择和对应选项其实是没有什么关系的，而value属性正式确定了这一关系，通常value的值是和选项的文字完全一样的。</p>
<p>这样做的原因是，需要让你的选择可以被提取并使用，否则在你写的页面中无法答案确定你到底选择了什么。</p>
<h6 id="checked属性"><a href="#checked属性" class="headerlink" title="checked属性"></a>checked属性</h6><blockquote>
<p><input type="radio" name="friut" value="苹果" checked>苹果</p>
</blockquote>
<p>这个属性在这里就比较好理解了，就是给你的单选框一个默认值，当你打开页面后就会直接选择那个选项，在HTML5的版本，这个属性可以不用写属性值，全写是’checked&#x3D;”checked”‘。</p>
<h5 id="4-复选框"><a href="#4、复选框" class="headerlink" title="4、复选框"></a>4、复选框</h5><p>复选框的type属性取值为”checkbox”</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			喜欢的水果：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;西瓜&quot;</span>&gt;</span>西瓜</span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草莓&quot;</span>&gt;</span>草莓</span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;friut&quot;</span> <span class="attr">value</span>=<span class="string">&quot;苹果&quot;</span>&gt;</span>苹果</span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-25.png" alt="avatar"></p>
<p>至于替他属性，单选框的属性完全适用于多选框，两者唯一不同的就是，在分好组的情况下一个只能选择一个选项，一个可以多选。并且两者的选择框的图形也不一样，可以直接在图片上看到。</p>
<p>checked属性表示默认，这也是一样，只不过是可以在多个标签下写。</p>
<h5 id="5-普通按钮"><a href="#5、普通按钮" class="headerlink" title="5、普通按钮"></a>5、普通按钮</h5><p>普通按钮的type属性取值为”button”。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">			&#123;	</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> oBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;baidu&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">				oBtn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">				&#123;	</span></span><br><span class="line"><span class="language-javascript">					<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;baidu&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span>			</span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-26.png" alt="avatar"></p>
<p>这里的普通按钮通常用和JavaScript配合使用，来完成一些网页的交互。至于上面的代码属于JavaScript的范畴，原理为新建一个函数，通过捕获按钮的id，来建立两者的联系，最后跳转到百度的页面。目前不需要考虑。</p>
<p>按钮的value属性则是在按钮上的提示信息。</p>
<h5 id="6-提交按钮"><a href="#6、提交按钮" class="headerlink" title="6、提交按钮"></a>6、提交按钮</h5><p>提交按钮的type属性取值为”submit”。<br>可以理解为特殊类型的普通按钮，在外观上和普通按钮没有任何区别。至于作用就是提交数据，和在form标签中的method、action<br>等属性一起使用的，最终把form表单中的文本框，单选框等中的数据提交到相应的位置。</p>
<h5 id="7-重置按钮"><a href="#7、重置按钮" class="headerlink" title="7、重置按钮"></a>7、重置按钮</h5><p>重置按钮的type属性取值为”reset”</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-27.png" alt="avatar"></p>
<p>他唯一的作用就是将当前表单中的所有输入数据清空，比如如上图所示在将账号和密码输入完成后，点击重置按钮将会，你所输入的数据将会被清空，达到一个重置的作用。</p>
<p>需要注意的是重置按钮只会重置当前表单中的数据，也就是在form标签中的，如果想要重置另一个form标签或是重置按钮在form标签外面，则不会重置数据。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交按钮&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置按钮&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-28.png" alt="avatar"></p>
<p>这三种按钮在外观上不会有任何的不同，但是每一个按钮的功能都是不一样的，所以需要在合适的地方使用合适的按钮。</p>
<h5 id="8-上传文件"><a href="#8、上传文件" class="headerlink" title="8、上传文件"></a>8、上传文件</h5><p>上传文件的的type属性取值为”file”</p>
<p>上传文件的功能通常用于邮箱，网盘等地方。但是这个功能通常是和后端挂钩的，目前不需要考虑。样式和按钮差不多，旁边会有你所选择的文件的提示。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传文件&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-29.png" alt="avatar"></p>
<h4 id="3textarea标签"><a href="#3-textarea标签" class="headerlink" title="(3)textarea标签"></a>(3)textarea标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;列数&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;提示文字&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最大字数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>textarea标签表示的是多行文本框，和input标签下的两种文本框大同小异</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;提示文字&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-30.png" alt="avatar"></p>
<p>不同的是这里多了rows属性和cols属性。分别控制多行文本框的大小和每一行的输入的最大字数。placeholder属性和maxlength属性和前边的文本框完全一样，分别可以控制文本框的提示文字和所输入的最大字数。</p>
<p>需要注意的是这里的textarea标签是双标签，而前面的两种文本框–input标签是单标签。</p>
<h4 id="4select标签"><a href="#4-select标签" class="headerlink" title="(4)select标签"></a>(4)select标签</h4><p>select标签表示下拉列表。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">		请选择你的大学：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>清华大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京理工大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京工业大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京科技大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/../img/1-31.png" alt="avatar"></p>
<p>这里还需要另一个标签–option标签。他的结构类似于表格，一个select标签是一个下拉列表，一个option标签是一个选项。</p>
<p>两个标签分别有两个常用的属性</p>
<h5 id="select标签"><a href="#select标签" class="headerlink" title="select标签"></a>select标签</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;显示的数量（整数）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>multiple属性可以是下拉列表可以多选，但是需要CTRL+鼠标左键来操作。但是同时也会改变下拉列表的样式。同时这个属性也可以直接简写为multiple，和前边的checked属性原理是一样的。</p>
<p>效果如下：</p>
<p><img src="/../img/1-32.png" alt="avatar"></p>
<p>size属性是用控制下拉列表的长度，比如像上图改为可多选后现实的长度就会默认为4格，而size属性的取值就是最后所显示的长度。</p>
<p>仔细观察，修改完属性值后下拉列表的像样式改变了，只要是设置了可多选，或是size的属性值不为1，则最后的样子都是如上图的可以滑动的列表的样子。</p>
<h5 id="option标签"><a href="#option标签" class="headerlink" title="option标签"></a>option标签</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span> <span class="attr">value</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span>选项<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>selected类似于之前的checked属性，是给下拉列表一个默认值。同时它也可以简写和checked属性原理一样。</p>
<p>value属性则是前边单选框中的value属性意义一样，是为了后边的JavaScript对下拉列表可以进行数据的处理。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端 - HTML</tag>
      </tags>
  </entry>
</search>
